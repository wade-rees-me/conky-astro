#!/usr/bin/env python3

import os
import json
from datetime import date
import striker
import exception

#
# Display today's sun and moon data from the precomputed JSON file.
# The data is assumed to be generated by another script and stored in striker.FILE_SOLAR_SYSTEM_DATA.
#


def get_sun_and_moon():
    # Get today's date in ISO format (YYYY-MM-DD)
    today = date.today()
    date_str = today.isoformat()

    # Ensure solar system data file exists
    if not os.path.exists(striker.FILE_SOLAR_SYSTEM_DATA):
        print(
            f"${{goto 20}}${{alignc}}${{font4}}${{color red}}No astronomy data: {striker.FILE_SOLAR_SYSTEM_DATA}"
        )
        return

    # Load JSON data from file
    try:
        with open(striker.FILE_SOLAR_SYSTEM_DATA, "r") as f:
            data = json.load(f)
    except json.JSONDecodeError:
        print(
            f"${{goto 20}}${{alignc}}${{font4}}${{color red}}Invalid JSON: {striker.FILE_SOLAR_SYSTEM_DATA}"
        )
        return

    # Get today's astronomy data
    today_data = data.get(date_str)
    if not today_data:
        print(f"${{goto 20}}${{alignc}}${{font4}}${{color red}}No entry for {date_str}")
        return

    # Extract data fields with fallbacks
    sunrise = today_data.get("sunrise", "--:--")
    sunset = today_data.get("sunset", "--:--")
    day_length = today_data.get("day_length", "--:--")
    sun_dec = today_data.get("sun_declination", "-----")

    moonrise = today_data.get("moonrise", "--:--")
    moonset = today_data.get("moonset", "--:--")
    moon_phase = today_data.get("moon_phase", "-----").replace("_", " ").capitalize()
    moon_emoji = today_data.get("moon_emoji", "")
    illumination = today_data.get("moon_illumination_percent", "-----")

    # Display sun information
    print(
        f"${{goto 20}}${{alignc}}${{font4}}${{color white}}"
        f"Sunrise: {sunrise} | Sunset: {sunset} | Day length: {day_length} | Declination: {sun_dec:4.1f}Â°"
    )

    # Display moon information
    print(
        f"${{goto 20}}${{alignc}}"
        f"Moonrise: {moonrise} | Moonset: {moonset} | Illumination: {illumination}% | "
        f"${{font4}}${{color white}}{moon_phase} moon ${{font Symbola:size=14}}${{color yellow}}{moon_emoji}${{font4}}${{color white}}"
    )


#
# Main execution
#
if __name__ == "__main__":
    try:
        get_sun_and_moon()
    except exception.StrikerException as e:
        print(exception.StrikerException.get_message(e))
